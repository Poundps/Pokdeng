{"ast":null,"code":"var _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\web-app-project\\\\react_feed\\\\src\\\\components\\\\Home\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Home.css';\nimport { PostData } from '../../services/PostData';\nimport UserFeed from \"../UserFeed/UserFeed\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport '../../styles/react-confirm-alert.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      userFeed1: 'kkkkk',\n      redirectToReferrer: false,\n      name: ''\n    };\n    this.getUserFeed = this.getUserFeed.bind(this);\n    this.feedUpdate = this.feedUpdate.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.deleteFeed = this.deleteFeed.bind(this);\n    this.deleteFeedAction = this.deleteFeedAction.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentWillMount() {\n    if (sessionStorage.getItem(\"userData\")) {\n      this.getUserFeed();\n    } else {\n      this.setState({\n        redirectToReferrer: true\n      });\n    }\n  } //-------------------------------------------------------\n\n\n  feedUpdate(e) {\n    e.preventDefault();\n    let data = JSON.parse(sessionStorage.getItem(\"userData\"));\n    let postData = {\n      user_id: data.userData.user_id,\n      feed: this.state.userFeed\n    };\n\n    if (this.state.userFeed) {\n      PostData('feedUpdate', postData).then(result => {\n        let responseJson = result;\n        this.setState({\n          data: responseJson.feedData\n        });\n      });\n    }\n  } //---------------------------------------------------------\n\n\n  deleteFeed(e) {\n    confirmAlert({\n      title: 'Delete Feed',\n      message: 'Are you sure to delete this feed.',\n      buttons: [{\n        label: 'Yes',\n        onClick: () => this.deleteFeedAction(e)\n      }, {\n        label: 'No',\n        onClick: () => alert('Click No')\n      }]\n    });\n  }\n\n  deleteFeedAction(e) {\n    let updateIndex = e.target.getAttribute('value');\n    let feed_id = document.getElementById(\"del\").getAttribute(\"data\");\n    let data = JSON.parse(sessionStorage.getItem(\"userData\"));\n    let postData = {\n      user_id: data.userData.user_id,\n      feed_id: feed_id\n    };\n\n    if (postData) {\n      PostData('feedDelete', postData).then(result => {\n        this.state.data.splice(updateIndex, 1);\n        this.setState({\n          data: this.state.data\n        });\n\n        if (result.success) {\n          alert(result.success);\n        } else alert(result.error);\n      });\n    }\n  }\n\n  editFeed(e) {\n    alert(\"j\");\n  }\n\n  getUserFeed() {\n    let data = JSON.parse(sessionStorage.getItem(\"userData\"));\n    this.setState({\n      name: data.userData.name\n    });\n    let postData = {\n      user_id: data.userData.user_id\n    };\n\n    if (data) {\n      PostData('feed', postData).then(result => {\n        let responseJson = result;\n\n        if (responseJson.feedData) {\n          this.setState({\n            data: responseJson.feedData\n          });\n          console.log(this.state);\n        }\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      userFeed: e.target.value\n    });\n  }\n\n  logout() {\n    sessionStorage.setItem(\"userData\", '');\n    sessionStorage.clear();\n    this.setState({\n      redirectToReferrer: true\n    });\n  }\n\n  render() {\n    if (this.state.redirectToReferrer) {\n      return React.createElement(Redirect, {\n        to: '/login',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      id: \"Body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"medium-12 columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      onClick: this.logout,\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(\"form\", {\n      onSubmit: this.feedUpdate,\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"userFeed\",\n      onChange: this.onChange,\n      value: this.state.userFeed,\n      type: \"hidden\",\n      placeholder: \"Write your feed here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Post\",\n      className: \"button\",\n      onClick: this.feedUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))), React.createElement(UserFeed, {\n      feedData: this.state.data,\n      deleteFeed: this.deleteFeed,\n      name: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["c:/xampp/htdocs/web-app-project/react_feed/src/components/Home/Home.js"],"names":["React","Component","Redirect","PostData","UserFeed","confirmAlert","Home","constructor","props","state","data","userFeed1","redirectToReferrer","name","getUserFeed","bind","feedUpdate","onChange","deleteFeed","deleteFeedAction","logout","componentWillMount","sessionStorage","getItem","setState","e","preventDefault","JSON","parse","postData","user_id","userData","feed","userFeed","then","result","responseJson","feedData","title","message","buttons","label","onClick","alert","updateIndex","target","getAttribute","feed_id","document","getElementById","splice","success","error","editFeed","console","log","value","setItem","clear","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './Home.css';\r\nimport {PostData} from '../../services/PostData';\r\nimport UserFeed from \"../UserFeed/UserFeed\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport '../../styles/react-confirm-alert.css';\r\n\r\nclass Home extends Component {\r\n\r\nconstructor(props) {\r\nsuper(props);\r\n\r\nthis.state = {\r\ndata:[],\r\nuserFeed1: 'kkkkk',\r\nredirectToReferrer: false,\r\nname:'',\r\n};\r\n\r\nthis.getUserFeed = this.getUserFeed.bind(this);\r\nthis.feedUpdate = this.feedUpdate.bind(this);\r\nthis.onChange = this.onChange.bind(this);\r\nthis.deleteFeed = this.deleteFeed.bind(this);\r\nthis.deleteFeedAction = this.deleteFeedAction.bind(this);\r\nthis.logout = this.logout.bind(this);\r\n}\r\n\r\ncomponentWillMount() {\r\n\r\nif(sessionStorage.getItem(\"userData\")){\r\nthis.getUserFeed();\r\n}\r\n\r\nelse{\r\nthis.setState({redirectToReferrer: true});\r\n}\r\n\r\n}\r\n//-------------------------------------------------------\r\nfeedUpdate(e) {\r\n\r\ne.preventDefault();\r\nlet data = JSON.parse(sessionStorage.getItem(\"userData\"));\r\nlet postData = { user_id: data.userData.user_id, feed: this.state.userFeed };\r\nif (this.state.userFeed) {\r\nPostData('feedUpdate', postData).then((result) => {\r\nlet responseJson = result;\r\nthis.setState({data: responseJson.feedData});\r\n});\r\n}\r\n}\r\n//---------------------------------------------------------\r\ndeleteFeed(e){\r\n\r\nconfirmAlert({\r\ntitle: 'Delete Feed',\r\nmessage: 'Are you sure to delete this feed.',\r\nbuttons: [\r\n{\r\nlabel: 'Yes',\r\nonClick: () => this.deleteFeedAction(e)\r\n},\r\n{\r\nlabel: 'No',\r\nonClick: () => alert('Click No')\r\n}\r\n]\r\n});\r\n\r\n}\r\n\r\ndeleteFeedAction(e){\r\n\r\nlet updateIndex=e.target.getAttribute('value');\r\n\r\nlet feed_id=document.getElementById(\"del\").getAttribute(\"data\");\r\n\r\nlet data = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n\r\nlet postData = { user_id: data.userData.user_id,feed_id: feed_id };\r\nif (postData) {\r\n\r\nPostData('feedDelete', postData).then((result) => {\r\nthis.state.data.splice(updateIndex,1);\r\nthis.setState({data:this.state.data});\r\n\r\nif(result.success){\r\n\r\nalert(result.success);\r\n}\r\nelse\r\nalert(result.error);\r\n\r\n});\r\n}\r\n}\r\n\r\neditFeed(e){\r\n\r\nalert(\"j\");\r\n}\r\n\r\ngetUserFeed() {\r\n\r\nlet data = JSON.parse(sessionStorage.getItem(\"userData\"));\r\nthis.setState({name:data.userData.name});\r\nlet postData = { user_id: data.userData.user_id};\r\n\r\nif (data) {\r\nPostData('feed', postData).then((result) => {\r\nlet responseJson = result;\r\nif(responseJson.feedData){\r\nthis.setState({data: responseJson.feedData});\r\nconsole.log(this.state);\r\n}\r\n});\r\n}\r\n\r\n}\r\n\r\nonChange(e){\r\nthis.setState({userFeed:e.target.value});\r\n}\r\nlogout(){\r\nsessionStorage.setItem(\"userData\",'');\r\nsessionStorage.clear();\r\nthis.setState({redirectToReferrer: true});\r\n}\r\n\r\nrender() {\r\nif (this.state.redirectToReferrer) {\r\nreturn (<Redirect to={'/login'}/>)\r\n}\r\n\r\nreturn (\r\n<div className=\"row\" id=\"Body\">\r\n<div className=\"medium-12 columns\">\r\n<a href=\"#\" onClick={this.logout} className=\"logout\">Logout</a>\r\n\r\n<form onSubmit={this.feedUpdate} method=\"post\">\r\n<input name=\"userFeed\" onChange={this.onChange} value={this.state.userFeed} type=\"hidden\" \r\nplaceholder=\"Write your feed here...\"/>\r\n<input\r\ntype=\"submit\"\r\nvalue=\"Post\"\r\nclassName=\"button\"\r\nonClick={this.feedUpdate}/>\r\n</form>\r\n\r\n</div>\r\n<UserFeed feedData = {this.state.data} deleteFeed = {this.deleteFeed} name={this.state.name}/>\r\n\r\n</div>\r\n);\r\n}\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}